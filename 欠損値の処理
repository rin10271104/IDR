import os
import shutil
import duckdb

# SQLクエリを定義
sql = '''\
SELECT *
FROM items
LEFT JOIN item_categories
ON items.category_id = item_categories.id
WHERE (item_categories.name0 = 'レディース' AND item_categories.name1 = 'パンツ') AND (items.name NOT LIKE '%様専用%' AND items.name NOT LIKE '%さん専用%')
'''

# SQLクエリを実行し、結果を取得
rel = duckdb.sql(sql)

df=rel.to_df()
df

# 欠損値の削除
df.dropna(inplace=True)
#外れ値の除去（四分位範囲法）
def remove_outliers(df, column):
    Q1 = df[column].quantile(0.25)
    Q3 = df[column].quantile(0.75)
    IQR = Q3 - Q1
    return df[~((df[column] < (Q1 - 1.5 * IQR)) | (df[column] > (Q3 + 1.5 * IQR)))]

cols=['price','num_likes','num_comments']
for c in cols:
    remove_outliers(df,c)

df.sample(n=10000,random_state=20,ignore_index=True)

def nukitori(df):
    first = [df.loc[i,'anon_item_id'][:2] for i in range(10000)]
    second = [df.loc[i,'anon_item_id'][2:4] for i in range(10000)]
    return first,second

 
def kaito(df):
    f,s=nukitori(df)
    yundesan='/home/jupyter-team04/JR-BigData/data/thumbnails'
    rin=[]
    for i in range(len(f)):
        path=yundesan+'/'+f[i]+'/'+s[i]+'/'
        for p in os.listdir(path):
            if df.loc[i,'anon_item_id'] in p:
                x.appned(p)
    return x
